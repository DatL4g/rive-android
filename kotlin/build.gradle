apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka'


android {
    compileSdkVersion 33
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    testOptions {
        unitTests.includeAndroidResources = true
    }
    dokkaGfm {
        dokkaSourceSets {
            named("main") {
                noAndroidSdkLink.set(false)
                outputDirectory.set(buildDir.resolve("dokka"))
                reportUndocumented.set(true)
            }
        }
    }
    namespace 'app.rive.runtime.kotlin'
}
configurations.all {
    resolutionStrategy.force "junit:junit:4.13.2"
}

dependencies {
    implementation 'com.android.volley:volley:1.2.1'
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.getkeepsafe.relinker:relinker:1.4.4'
    implementation 'androidx.startup:startup-runtime:1.1.1'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test:core-ktx:1.5.0'


    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

// Commenting this out, this only really helps when you're doing local dev, but it means our git actions need abd!
// static def getDeviceAbi() {
//     return "adb shell getprop ro.product.cpu.abi".execute().text.trim()
// }

// task buildJNI(type: Exec) {
//     workingDir '../cpp'
//     commandLine './build.rive.for.sh', '-a', getDeviceAbi()
// }

apply from: "${rootProject.projectDir}/scripts/publish-module.gradle"
